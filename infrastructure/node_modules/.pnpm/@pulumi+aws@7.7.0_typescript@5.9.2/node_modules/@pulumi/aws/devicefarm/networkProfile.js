"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkProfile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage AWS Device Farm Network Profiles.
 * âˆ‚
 * > **NOTE:** AWS currently has limited regional support for Device Farm (e.g., `us-west-2`). See [AWS Device Farm endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/devicefarm.html) for information on supported regions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devicefarm.Project("example", {name: "example"});
 * const exampleNetworkProfile = new aws.devicefarm.NetworkProfile("example", {
 *     name: "example",
 *     projectArn: example.arn,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import DeviceFarm Network Profiles using their ARN. For example:
 *
 * ```sh
 * $ pulumi import aws:devicefarm/networkProfile:NetworkProfile example arn:aws:devicefarm:us-west-2:123456789012:networkprofile:4fa784c7-ccb4-4dbf-ba4f-02198320daa1
 * ```
 */
class NetworkProfile extends pulumi.CustomResource {
    /**
     * Get an existing NetworkProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new NetworkProfile(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of NetworkProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkProfile.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["description"] = state?.description;
            resourceInputs["downlinkBandwidthBits"] = state?.downlinkBandwidthBits;
            resourceInputs["downlinkDelayMs"] = state?.downlinkDelayMs;
            resourceInputs["downlinkJitterMs"] = state?.downlinkJitterMs;
            resourceInputs["downlinkLossPercent"] = state?.downlinkLossPercent;
            resourceInputs["name"] = state?.name;
            resourceInputs["projectArn"] = state?.projectArn;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["type"] = state?.type;
            resourceInputs["uplinkBandwidthBits"] = state?.uplinkBandwidthBits;
            resourceInputs["uplinkDelayMs"] = state?.uplinkDelayMs;
            resourceInputs["uplinkJitterMs"] = state?.uplinkJitterMs;
            resourceInputs["uplinkLossPercent"] = state?.uplinkLossPercent;
        }
        else {
            const args = argsOrState;
            if (args?.projectArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectArn'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["downlinkBandwidthBits"] = args?.downlinkBandwidthBits;
            resourceInputs["downlinkDelayMs"] = args?.downlinkDelayMs;
            resourceInputs["downlinkJitterMs"] = args?.downlinkJitterMs;
            resourceInputs["downlinkLossPercent"] = args?.downlinkLossPercent;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectArn"] = args?.projectArn;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["uplinkBandwidthBits"] = args?.uplinkBandwidthBits;
            resourceInputs["uplinkDelayMs"] = args?.uplinkDelayMs;
            resourceInputs["uplinkJitterMs"] = args?.uplinkJitterMs;
            resourceInputs["uplinkLossPercent"] = args?.uplinkLossPercent;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkProfile.__pulumiType, name, resourceInputs, opts);
    }
}
exports.NetworkProfile = NetworkProfile;
/** @internal */
NetworkProfile.__pulumiType = 'aws:devicefarm/networkProfile:NetworkProfile';
//# sourceMappingURL=networkProfile.js.map