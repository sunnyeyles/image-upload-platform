"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResolverFirewallRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Route 53 Resolver DNS Firewall rule resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.route53.ResolverFirewallDomainList("example", {
 *     name: "example",
 *     domains: ["example.com"],
 *     tags: {},
 * });
 * const exampleResolverFirewallRuleGroup = new aws.route53.ResolverFirewallRuleGroup("example", {
 *     name: "example",
 *     tags: {},
 * });
 * const exampleResolverFirewallRule = new aws.route53.ResolverFirewallRule("example", {
 *     name: "example",
 *     action: "BLOCK",
 *     blockOverrideDnsType: "CNAME",
 *     blockOverrideDomain: "example.com",
 *     blockOverrideTtl: 1,
 *     blockResponse: "OVERRIDE",
 *     firewallDomainListId: example.id,
 *     firewallRuleGroupId: exampleResolverFirewallRuleGroup.id,
 *     priority: 100,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import  Route 53 Resolver DNS Firewall rules using the Route 53 Resolver DNS Firewall rule group ID and domain list ID separated by ':'. For example:
 *
 * ```sh
 * $ pulumi import aws:route53/resolverFirewallRule:ResolverFirewallRule example rslvr-frg-0123456789abcdef:rslvr-fdl-0123456789abcdef
 * ```
 */
class ResolverFirewallRule extends pulumi.CustomResource {
    /**
     * Get an existing ResolverFirewallRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ResolverFirewallRule(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ResolverFirewallRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResolverFirewallRule.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["action"] = state?.action;
            resourceInputs["blockOverrideDnsType"] = state?.blockOverrideDnsType;
            resourceInputs["blockOverrideDomain"] = state?.blockOverrideDomain;
            resourceInputs["blockOverrideTtl"] = state?.blockOverrideTtl;
            resourceInputs["blockResponse"] = state?.blockResponse;
            resourceInputs["firewallDomainListId"] = state?.firewallDomainListId;
            resourceInputs["firewallDomainRedirectionAction"] = state?.firewallDomainRedirectionAction;
            resourceInputs["firewallRuleGroupId"] = state?.firewallRuleGroupId;
            resourceInputs["name"] = state?.name;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["qType"] = state?.qType;
            resourceInputs["region"] = state?.region;
        }
        else {
            const args = argsOrState;
            if (args?.action === undefined && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if (args?.firewallDomainListId === undefined && !opts.urn) {
                throw new Error("Missing required property 'firewallDomainListId'");
            }
            if (args?.firewallRuleGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'firewallRuleGroupId'");
            }
            if (args?.priority === undefined && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            resourceInputs["action"] = args?.action;
            resourceInputs["blockOverrideDnsType"] = args?.blockOverrideDnsType;
            resourceInputs["blockOverrideDomain"] = args?.blockOverrideDomain;
            resourceInputs["blockOverrideTtl"] = args?.blockOverrideTtl;
            resourceInputs["blockResponse"] = args?.blockResponse;
            resourceInputs["firewallDomainListId"] = args?.firewallDomainListId;
            resourceInputs["firewallDomainRedirectionAction"] = args?.firewallDomainRedirectionAction;
            resourceInputs["firewallRuleGroupId"] = args?.firewallRuleGroupId;
            resourceInputs["name"] = args?.name;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["qType"] = args?.qType;
            resourceInputs["region"] = args?.region;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResolverFirewallRule.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ResolverFirewallRule = ResolverFirewallRule;
/** @internal */
ResolverFirewallRule.__pulumiType = 'aws:route53/resolverFirewallRule:ResolverFirewallRule';
//# sourceMappingURL=resolverFirewallRule.js.map