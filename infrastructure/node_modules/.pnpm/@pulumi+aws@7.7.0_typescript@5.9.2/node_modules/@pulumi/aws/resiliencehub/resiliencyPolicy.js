"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResiliencyPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS Resilience Hub Resiliency Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.resiliencehub.ResiliencyPolicy("example", {
 *     name: "testexample",
 *     description: "testexample",
 *     tier: "NonCritical",
 *     dataLocationConstraint: "AnyLocation",
 *     policy: {
 *         region: {
 *             rpo: "24h",
 *             rto: "24h",
 *         },
 *         az: {
 *             rpo: "24h",
 *             rto: "24h",
 *         },
 *         hardware: {
 *             rpo: "24h",
 *             rto: "24h",
 *         },
 *         software: {
 *             rpo: "24h",
 *             rto: "24h",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Resilience Hub Resiliency Policy using the `arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:resiliencehub/resiliencyPolicy:ResiliencyPolicy example arn:aws:resiliencehub:us-east-1:123456789012:resiliency-policy/8c1cfa29-d1dd-4421-aa68-c9f64cced4c2
 * ```
 */
class ResiliencyPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ResiliencyPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ResiliencyPolicy(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ResiliencyPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResiliencyPolicy.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["dataLocationConstraint"] = state?.dataLocationConstraint;
            resourceInputs["description"] = state?.description;
            resourceInputs["estimatedCostTier"] = state?.estimatedCostTier;
            resourceInputs["name"] = state?.name;
            resourceInputs["policy"] = state?.policy;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["tier"] = state?.tier;
            resourceInputs["timeouts"] = state?.timeouts;
        }
        else {
            const args = argsOrState;
            if (args?.tier === undefined && !opts.urn) {
                throw new Error("Missing required property 'tier'");
            }
            resourceInputs["dataLocationConstraint"] = args?.dataLocationConstraint;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["policy"] = args?.policy;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tier"] = args?.tier;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["estimatedCostTier"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResiliencyPolicy.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ResiliencyPolicy = ResiliencyPolicy;
/** @internal */
ResiliencyPolicy.__pulumiType = 'aws:resiliencehub/resiliencyPolicy:ResiliencyPolicy';
//# sourceMappingURL=resiliencyPolicy.js.map