"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustedTokenIssuer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS SSO Admin Trusted Token Issuer.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ssoadmin.getInstances({});
 * const exampleTrustedTokenIssuer = new aws.ssoadmin.TrustedTokenIssuer("example", {
 *     name: "example",
 *     instanceArn: example.then(example => example.arns?.[0]),
 *     trustedTokenIssuerType: "OIDC_JWT",
 *     trustedTokenIssuerConfiguration: {
 *         oidcJwtConfiguration: {
 *             claimAttributePath: "email",
 *             identityStoreAttributePath: "emails.value",
 *             issuerUrl: "https://example.com",
 *             jwksRetrievalOption: "OPEN_ID_DISCOVERY",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SSO Admin Trusted Token Issuer using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer example arn:aws:sso::123456789012:trustedTokenIssuer/ssoins-lu1ye3gew4mbc7ju/tti-2657c556-9707-11ee-b9d1-0242ac120002
 * ```
 */
class TrustedTokenIssuer extends pulumi.CustomResource {
    /**
     * Get an existing TrustedTokenIssuer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new TrustedTokenIssuer(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of TrustedTokenIssuer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrustedTokenIssuer.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["clientToken"] = state?.clientToken;
            resourceInputs["instanceArn"] = state?.instanceArn;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["trustedTokenIssuerConfiguration"] = state?.trustedTokenIssuerConfiguration;
            resourceInputs["trustedTokenIssuerType"] = state?.trustedTokenIssuerType;
        }
        else {
            const args = argsOrState;
            if (args?.instanceArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            if (args?.trustedTokenIssuerType === undefined && !opts.urn) {
                throw new Error("Missing required property 'trustedTokenIssuerType'");
            }
            resourceInputs["clientToken"] = args?.clientToken;
            resourceInputs["instanceArn"] = args?.instanceArn;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["trustedTokenIssuerConfiguration"] = args?.trustedTokenIssuerConfiguration;
            resourceInputs["trustedTokenIssuerType"] = args?.trustedTokenIssuerType;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrustedTokenIssuer.__pulumiType, name, resourceInputs, opts);
    }
}
exports.TrustedTokenIssuer = TrustedTokenIssuer;
/** @internal */
TrustedTokenIssuer.__pulumiType = 'aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer';
//# sourceMappingURL=trustedTokenIssuer.js.map