"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an SES configuration set resource.
 *
 * ## Example Usage
 *
 * ### Basic Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {name: "some-configuration-set-test"});
 * ```
 *
 * ### Require TLS Connections
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {
 *     name: "some-configuration-set-test",
 *     deliveryOptions: {
 *         tlsPolicy: "Require",
 *     },
 * });
 * ```
 *
 * ### Tracking Options
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {
 *     name: "some-configuration-set-test",
 *     trackingOptions: {
 *         customRedirectDomain: "sub.example.com",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SES Configuration Sets using their `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:ses/configurationSet:ConfigurationSet test some-configuration-set-test
 * ```
 */
class ConfigurationSet extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ConfigurationSet(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ConfigurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationSet.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["deliveryOptions"] = state?.deliveryOptions;
            resourceInputs["lastFreshStart"] = state?.lastFreshStart;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["reputationMetricsEnabled"] = state?.reputationMetricsEnabled;
            resourceInputs["sendingEnabled"] = state?.sendingEnabled;
            resourceInputs["trackingOptions"] = state?.trackingOptions;
        }
        else {
            const args = argsOrState;
            resourceInputs["deliveryOptions"] = args?.deliveryOptions;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["reputationMetricsEnabled"] = args?.reputationMetricsEnabled;
            resourceInputs["sendingEnabled"] = args?.sendingEnabled;
            resourceInputs["trackingOptions"] = args?.trackingOptions;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["lastFreshStart"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "aws:ses/confgurationSet:ConfgurationSet" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ConfigurationSet.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ConfigurationSet = ConfigurationSet;
/** @internal */
ConfigurationSet.__pulumiType = 'aws:ses/configurationSet:ConfigurationSet';
//# sourceMappingURL=configurationSet.js.map