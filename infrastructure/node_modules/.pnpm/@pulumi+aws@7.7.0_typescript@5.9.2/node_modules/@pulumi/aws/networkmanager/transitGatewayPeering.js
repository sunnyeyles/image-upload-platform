"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransitGatewayPeering = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Network Manager transit gateway peering connection. Creates a peering connection between an AWS Cloud WAN core network and an AWS Transit Gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.TransitGatewayPeering("example", {
 *     coreNetworkId: exampleAwsccNetworkmanagerCoreNetwork.id,
 *     transitGatewayArn: exampleAwsEc2TransitGateway.arn,
 * }, {
 *     dependsOn: [
 *         exampleAwsEc2TransitGatewayPolicyTable,
 *         exampleAwsNetworkmanagerCoreNetworkPolicyAttachment,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_networkmanager_transit_gateway_peering` using the peering ID. For example:
 *
 * ```sh
 * $ pulumi import aws:networkmanager/transitGatewayPeering:TransitGatewayPeering example peering-444555aaabbb11223
 * ```
 */
class TransitGatewayPeering extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayPeering resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new TransitGatewayPeering(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of TransitGatewayPeering.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayPeering.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["coreNetworkArn"] = state?.coreNetworkArn;
            resourceInputs["coreNetworkId"] = state?.coreNetworkId;
            resourceInputs["edgeLocation"] = state?.edgeLocation;
            resourceInputs["ownerAccountId"] = state?.ownerAccountId;
            resourceInputs["peeringType"] = state?.peeringType;
            resourceInputs["resourceArn"] = state?.resourceArn;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["transitGatewayArn"] = state?.transitGatewayArn;
            resourceInputs["transitGatewayPeeringAttachmentId"] = state?.transitGatewayPeeringAttachmentId;
        }
        else {
            const args = argsOrState;
            if (args?.coreNetworkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'coreNetworkId'");
            }
            if (args?.transitGatewayArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayArn'");
            }
            resourceInputs["coreNetworkId"] = args?.coreNetworkId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["transitGatewayArn"] = args?.transitGatewayArn;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["coreNetworkArn"] = undefined /*out*/;
            resourceInputs["edgeLocation"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
            resourceInputs["peeringType"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["transitGatewayPeeringAttachmentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitGatewayPeering.__pulumiType, name, resourceInputs, opts);
    }
}
exports.TransitGatewayPeering = TransitGatewayPeering;
/** @internal */
TransitGatewayPeering.__pulumiType = 'aws:networkmanager/transitGatewayPeering:TransitGatewayPeering';
//# sourceMappingURL=transitGatewayPeering.js.map