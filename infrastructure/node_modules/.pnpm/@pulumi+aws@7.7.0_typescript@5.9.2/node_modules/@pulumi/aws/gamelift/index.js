"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Script = exports.GameSessionQueue = exports.GameServerGroup = exports.Fleet = exports.Build = exports.Alias = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Alias = null;
utilities.lazyLoad(exports, ["Alias"], () => require("./alias"));
exports.Build = null;
utilities.lazyLoad(exports, ["Build"], () => require("./build"));
exports.Fleet = null;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));
exports.GameServerGroup = null;
utilities.lazyLoad(exports, ["GameServerGroup"], () => require("./gameServerGroup"));
exports.GameSessionQueue = null;
utilities.lazyLoad(exports, ["GameSessionQueue"], () => require("./gameSessionQueue"));
exports.Script = null;
utilities.lazyLoad(exports, ["Script"], () => require("./script"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:gamelift/alias:Alias":
                return new exports.Alias(name, undefined, { urn });
            case "aws:gamelift/build:Build":
                return new exports.Build(name, undefined, { urn });
            case "aws:gamelift/fleet:Fleet":
                return new exports.Fleet(name, undefined, { urn });
            case "aws:gamelift/gameServerGroup:GameServerGroup":
                return new exports.GameServerGroup(name, undefined, { urn });
            case "aws:gamelift/gameSessionQueue:GameSessionQueue":
                return new exports.GameSessionQueue(name, undefined, { urn });
            case "aws:gamelift/script:Script":
                return new exports.Script(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "gamelift/alias", _module);
pulumi.runtime.registerResourceModule("aws", "gamelift/build", _module);
pulumi.runtime.registerResourceModule("aws", "gamelift/fleet", _module);
pulumi.runtime.registerResourceModule("aws", "gamelift/gameServerGroup", _module);
pulumi.runtime.registerResourceModule("aws", "gamelift/gameSessionQueue", _module);
pulumi.runtime.registerResourceModule("aws", "gamelift/script", _module);
//# sourceMappingURL=index.js.map