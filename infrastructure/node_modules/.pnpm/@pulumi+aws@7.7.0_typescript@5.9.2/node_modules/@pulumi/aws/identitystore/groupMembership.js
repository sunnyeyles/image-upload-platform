"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupMembership = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS IdentityStore Group Membership.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ssoadmin.getInstances({});
 * const exampleUser = new aws.identitystore.User("example", {
 *     identityStoreId: example.then(example => example.identityStoreIds?.[0]),
 *     displayName: "John Doe",
 *     userName: "john.doe@example.com",
 *     name: {
 *         familyName: "Doe",
 *         givenName: "John",
 *     },
 * });
 * const exampleGroup = new aws.identitystore.Group("example", {
 *     identityStoreId: example.then(example => example.identityStoreIds?.[0]),
 *     displayName: "MyGroup",
 *     description: "Some group name",
 * });
 * const exampleGroupMembership = new aws.identitystore.GroupMembership("example", {
 *     identityStoreId: example.then(example => example.identityStoreIds?.[0]),
 *     groupId: exampleGroup.groupId,
 *     memberId: exampleUser.userId,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_identitystore_group_membership` using the `identity_store_id/membership_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:identitystore/groupMembership:GroupMembership example d-0000000000/00000000-0000-0000-0000-000000000000
 * ```
 */
class GroupMembership extends pulumi.CustomResource {
    /**
     * Get an existing GroupMembership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new GroupMembership(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of GroupMembership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupMembership.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["identityStoreId"] = state?.identityStoreId;
            resourceInputs["memberId"] = state?.memberId;
            resourceInputs["membershipId"] = state?.membershipId;
            resourceInputs["region"] = state?.region;
        }
        else {
            const args = argsOrState;
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if (args?.identityStoreId === undefined && !opts.urn) {
                throw new Error("Missing required property 'identityStoreId'");
            }
            if (args?.memberId === undefined && !opts.urn) {
                throw new Error("Missing required property 'memberId'");
            }
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["identityStoreId"] = args?.identityStoreId;
            resourceInputs["memberId"] = args?.memberId;
            resourceInputs["region"] = args?.region;
            resourceInputs["membershipId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupMembership.__pulumiType, name, resourceInputs, opts);
    }
}
exports.GroupMembership = GroupMembership;
/** @internal */
GroupMembership.__pulumiType = 'aws:identitystore/groupMembership:GroupMembership';
//# sourceMappingURL=groupMembership.js.map