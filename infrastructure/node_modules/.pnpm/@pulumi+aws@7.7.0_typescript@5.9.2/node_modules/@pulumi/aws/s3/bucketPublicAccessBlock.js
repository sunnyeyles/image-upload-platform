"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BucketPublicAccessBlock = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.s3.Bucket("example", {bucket: "example"});
 * const exampleBucketPublicAccessBlock = new aws.s3.BucketPublicAccessBlock("example", {
 *     bucket: example.id,
 *     blockPublicAcls: true,
 *     blockPublicPolicy: true,
 *     ignorePublicAcls: true,
 *     restrictPublicBuckets: true,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_s3_bucket_public_access_block` using the bucket name. For example:
 *
 * ```sh
 * $ pulumi import aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock example my-bucket
 * ```
 */
class BucketPublicAccessBlock extends pulumi.CustomResource {
    /**
     * Get an existing BucketPublicAccessBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BucketPublicAccessBlock(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of BucketPublicAccessBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketPublicAccessBlock.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["blockPublicAcls"] = state?.blockPublicAcls;
            resourceInputs["blockPublicPolicy"] = state?.blockPublicPolicy;
            resourceInputs["bucket"] = state?.bucket;
            resourceInputs["ignorePublicAcls"] = state?.ignorePublicAcls;
            resourceInputs["region"] = state?.region;
            resourceInputs["restrictPublicBuckets"] = state?.restrictPublicBuckets;
            resourceInputs["skipDestroy"] = state?.skipDestroy;
        }
        else {
            const args = argsOrState;
            if (args?.bucket === undefined && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["blockPublicAcls"] = args?.blockPublicAcls;
            resourceInputs["blockPublicPolicy"] = args?.blockPublicPolicy;
            resourceInputs["bucket"] = args?.bucket;
            resourceInputs["ignorePublicAcls"] = args?.ignorePublicAcls;
            resourceInputs["region"] = args?.region;
            resourceInputs["restrictPublicBuckets"] = args?.restrictPublicBuckets;
            resourceInputs["skipDestroy"] = args?.skipDestroy;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketPublicAccessBlock.__pulumiType, name, resourceInputs, opts);
    }
}
exports.BucketPublicAccessBlock = BucketPublicAccessBlock;
/** @internal */
BucketPublicAccessBlock.__pulumiType = 'aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock';
//# sourceMappingURL=bucketPublicAccessBlock.js.map