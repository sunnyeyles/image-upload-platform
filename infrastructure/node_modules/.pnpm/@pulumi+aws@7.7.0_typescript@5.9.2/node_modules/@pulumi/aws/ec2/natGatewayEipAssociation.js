"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NatGatewayEipAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS VPC NAT Gateway EIP Association.
 *
 * !> **WARNING:** You should not use the `aws.ec2.NatGatewayEipAssociation` resource in conjunction with an `aws.ec2.NatGateway` resource that has `secondaryAllocationIds` configured. Doing so may cause perpetual differences, and result in associations being overwritten.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.NatGatewayEipAssociation("example", {
 *     allocationId: exampleAwsEip.id,
 *     natGatewayId: exampleAwsNatGateway.id,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import VPC NAT Gateway EIP Association using the `nat_gateway_id,allocation_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:ec2/natGatewayEipAssociation:NatGatewayEipAssociation example nat-1234567890abcdef1,eipalloc-1234567890abcdef1
 * ```
 */
class NatGatewayEipAssociation extends pulumi.CustomResource {
    /**
     * Get an existing NatGatewayEipAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new NatGatewayEipAssociation(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of NatGatewayEipAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatGatewayEipAssociation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["allocationId"] = state?.allocationId;
            resourceInputs["associationId"] = state?.associationId;
            resourceInputs["natGatewayId"] = state?.natGatewayId;
            resourceInputs["region"] = state?.region;
            resourceInputs["timeouts"] = state?.timeouts;
        }
        else {
            const args = argsOrState;
            if (args?.allocationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'allocationId'");
            }
            if (args?.natGatewayId === undefined && !opts.urn) {
                throw new Error("Missing required property 'natGatewayId'");
            }
            resourceInputs["allocationId"] = args?.allocationId;
            resourceInputs["natGatewayId"] = args?.natGatewayId;
            resourceInputs["region"] = args?.region;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["associationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatGatewayEipAssociation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.NatGatewayEipAssociation = NatGatewayEipAssociation;
/** @internal */
NatGatewayEipAssociation.__pulumiType = 'aws:ec2/natGatewayEipAssociation:NatGatewayEipAssociation';
//# sourceMappingURL=natGatewayEipAssociation.js.map