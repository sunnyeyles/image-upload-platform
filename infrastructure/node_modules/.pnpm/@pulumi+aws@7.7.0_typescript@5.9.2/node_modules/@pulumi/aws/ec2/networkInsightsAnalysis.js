"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkInsightsAnalysis = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Network Insights Analysis resource. Part of the "Reachability Analyzer" service in the AWS VPC console.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const path = new aws.ec2.NetworkInsightsPath("path", {
 *     source: source.id,
 *     destination: destination.id,
 *     protocol: "tcp",
 * });
 * const analysis = new aws.ec2.NetworkInsightsAnalysis("analysis", {networkInsightsPathId: path.id});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Network Insights Analyzes using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:ec2/networkInsightsAnalysis:NetworkInsightsAnalysis test nia-0462085c957f11a55
 * ```
 */
class NetworkInsightsAnalysis extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInsightsAnalysis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new NetworkInsightsAnalysis(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of NetworkInsightsAnalysis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInsightsAnalysis.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["alternatePathHints"] = state?.alternatePathHints;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["explanations"] = state?.explanations;
            resourceInputs["filterInArns"] = state?.filterInArns;
            resourceInputs["forwardPathComponents"] = state?.forwardPathComponents;
            resourceInputs["networkInsightsPathId"] = state?.networkInsightsPathId;
            resourceInputs["pathFound"] = state?.pathFound;
            resourceInputs["region"] = state?.region;
            resourceInputs["returnPathComponents"] = state?.returnPathComponents;
            resourceInputs["startDate"] = state?.startDate;
            resourceInputs["status"] = state?.status;
            resourceInputs["statusMessage"] = state?.statusMessage;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["waitForCompletion"] = state?.waitForCompletion;
            resourceInputs["warningMessage"] = state?.warningMessage;
        }
        else {
            const args = argsOrState;
            if (args?.networkInsightsPathId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkInsightsPathId'");
            }
            resourceInputs["filterInArns"] = args?.filterInArns;
            resourceInputs["networkInsightsPathId"] = args?.networkInsightsPathId;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["waitForCompletion"] = args?.waitForCompletion;
            resourceInputs["alternatePathHints"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["explanations"] = undefined /*out*/;
            resourceInputs["forwardPathComponents"] = undefined /*out*/;
            resourceInputs["pathFound"] = undefined /*out*/;
            resourceInputs["returnPathComponents"] = undefined /*out*/;
            resourceInputs["startDate"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["warningMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkInsightsAnalysis.__pulumiType, name, resourceInputs, opts);
    }
}
exports.NetworkInsightsAnalysis = NetworkInsightsAnalysis;
/** @internal */
NetworkInsightsAnalysis.__pulumiType = 'aws:ec2/networkInsightsAnalysis:NetworkInsightsAnalysis';
//# sourceMappingURL=networkInsightsAnalysis.js.map