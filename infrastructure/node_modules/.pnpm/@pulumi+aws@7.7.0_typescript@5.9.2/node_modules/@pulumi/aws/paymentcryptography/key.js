"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Key = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS Payment Cryptography Control Plane Key.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.paymentcryptography.Key("test", {
 *     exportable: true,
 *     keyAttributes: [{
 *         keyAlgorithm: "TDES_3KEY",
 *         keyClass: "SYMMETRIC_KEY",
 *         keyUsage: "TR31_P0_PIN_ENCRYPTION_KEY",
 *         keyModesOfUses: [{
 *             decrypt: true,
 *             encrypt: true,
 *             wrap: true,
 *             unwrap: true,
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Payment Cryptography Control Plane Key using the `arn:aws:payment-cryptography:us-east-1:123456789012:key/qtbojf64yshyvyzf`. For example:
 *
 * ```sh
 * $ pulumi import aws:paymentcryptography/key:Key example arn:aws:payment-cryptography:us-east-1:123456789012:key/qtbojf64yshyvyzf
 * ```
 */
class Key extends pulumi.CustomResource {
    /**
     * Get an existing Key resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Key(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of Key.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Key.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["deletionWindowInDays"] = state?.deletionWindowInDays;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["exportable"] = state?.exportable;
            resourceInputs["keyAttributes"] = state?.keyAttributes;
            resourceInputs["keyCheckValue"] = state?.keyCheckValue;
            resourceInputs["keyCheckValueAlgorithm"] = state?.keyCheckValueAlgorithm;
            resourceInputs["keyOrigin"] = state?.keyOrigin;
            resourceInputs["keyState"] = state?.keyState;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["timeouts"] = state?.timeouts;
        }
        else {
            const args = argsOrState;
            if (args?.exportable === undefined && !opts.urn) {
                throw new Error("Missing required property 'exportable'");
            }
            resourceInputs["deletionWindowInDays"] = args?.deletionWindowInDays;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["exportable"] = args?.exportable;
            resourceInputs["keyAttributes"] = args?.keyAttributes;
            resourceInputs["keyCheckValueAlgorithm"] = args?.keyCheckValueAlgorithm;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["keyCheckValue"] = undefined /*out*/;
            resourceInputs["keyOrigin"] = undefined /*out*/;
            resourceInputs["keyState"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Key.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Key = Key;
/** @internal */
Key.__pulumiType = 'aws:paymentcryptography/key:Key';
//# sourceMappingURL=key.js.map