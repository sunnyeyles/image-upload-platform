"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustStore = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS WorkSpaces Web Trust Store.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as std from "@pulumi/std";
 *
 * const example = new aws.workspacesweb.TrustStore("example", {certificates: [{
 *     body: std.file({
 *         input: "certificate.pem",
 *     }).then(invoke => invoke.result),
 * }]});
 * ```
 *
 * ### Multiple Certificates
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as std from "@pulumi/std";
 *
 * const example = new aws.workspacesweb.TrustStore("example", {
 *     certificates: [
 *         {
 *             body: std.file({
 *                 input: "certificate1.pem",
 *             }).then(invoke => invoke.result),
 *         },
 *         {
 *             body: std.file({
 *                 input: "certificate2.pem",
 *             }).then(invoke => invoke.result),
 *         },
 *     ],
 *     tags: {
 *         Name: "example-trust-store",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import WorkSpaces Web Trust Store using the `trust_store_arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:workspacesweb/trustStore:TrustStore example arn:aws:workspaces-web:us-west-2:123456789012:trustStore/trust_store-id-12345678
 * ```
 */
class TrustStore extends pulumi.CustomResource {
    /**
     * Get an existing TrustStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new TrustStore(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of TrustStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrustStore.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["associatedPortalArns"] = state?.associatedPortalArns;
            resourceInputs["certificates"] = state?.certificates;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["trustStoreArn"] = state?.trustStoreArn;
        }
        else {
            const args = argsOrState;
            resourceInputs["certificates"] = args?.certificates;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["associatedPortalArns"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["trustStoreArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrustStore.__pulumiType, name, resourceInputs, opts);
    }
}
exports.TrustStore = TrustStore;
/** @internal */
TrustStore.__pulumiType = 'aws:workspacesweb/trustStore:TrustStore';
//# sourceMappingURL=trustStore.js.map