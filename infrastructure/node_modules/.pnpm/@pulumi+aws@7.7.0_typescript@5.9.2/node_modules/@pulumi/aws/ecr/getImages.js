"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getImagesOutput = exports.getImages = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The ECR Images data source allows the list of images in a specified repository to be retrieved.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ecr.getImages({
 *     repositoryName: "my-repository",
 * });
 * export const imageDigests = example.then(example => .filter(img => img.imageDigest != null).map(img => (img.imageDigest)));
 * export const imageTags = example.then(example => .filter(img => img.imageTag != null).map(img => (img.imageTag)));
 * ```
 */
function getImages(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ecr/getImages:getImages", {
        "region": args.region,
        "registryId": args.registryId,
        "repositoryName": args.repositoryName,
    }, opts);
}
exports.getImages = getImages;
/**
 * The ECR Images data source allows the list of images in a specified repository to be retrieved.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ecr.getImages({
 *     repositoryName: "my-repository",
 * });
 * export const imageDigests = example.then(example => .filter(img => img.imageDigest != null).map(img => (img.imageDigest)));
 * export const imageTags = example.then(example => .filter(img => img.imageTag != null).map(img => (img.imageTag)));
 * ```
 */
function getImagesOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:ecr/getImages:getImages", {
        "region": args.region,
        "registryId": args.registryId,
        "repositoryName": args.repositoryName,
    }, opts);
}
exports.getImagesOutput = getImagesOutput;
//# sourceMappingURL=getImages.js.map