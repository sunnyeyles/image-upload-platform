"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessEntry = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Access Entry Configurations for an EKS Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.eks.AccessEntry("example", {
 *     clusterName: exampleAwsEksCluster.name,
 *     principalArn: exampleAwsIamRole.arn,
 *     kubernetesGroups: [
 *         "group-1",
 *         "group-2",
 *     ],
 *     type: "STANDARD",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import EKS access entry using the `cluster_name` and `principal_arn` separated by a colon (`:`). For example:
 *
 * ```sh
 * $ pulumi import aws:eks/accessEntry:AccessEntry my_eks_access_entry my_cluster_name:my_principal_arn
 * ```
 */
class AccessEntry extends pulumi.CustomResource {
    /**
     * Get an existing AccessEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AccessEntry(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of AccessEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessEntry.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accessEntryArn"] = state?.accessEntryArn;
            resourceInputs["clusterName"] = state?.clusterName;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["kubernetesGroups"] = state?.kubernetesGroups;
            resourceInputs["modifiedAt"] = state?.modifiedAt;
            resourceInputs["principalArn"] = state?.principalArn;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["type"] = state?.type;
            resourceInputs["userName"] = state?.userName;
        }
        else {
            const args = argsOrState;
            if (args?.clusterName === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if (args?.principalArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'principalArn'");
            }
            resourceInputs["clusterName"] = args?.clusterName;
            resourceInputs["kubernetesGroups"] = args?.kubernetesGroups;
            resourceInputs["principalArn"] = args?.principalArn;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["userName"] = args?.userName;
            resourceInputs["accessEntryArn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["modifiedAt"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessEntry.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AccessEntry = AccessEntry;
/** @internal */
AccessEntry.__pulumiType = 'aws:eks/accessEntry:AccessEntry';
//# sourceMappingURL=accessEntry.js.map