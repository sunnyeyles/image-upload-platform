"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Associates a Direct Connect Connection with a LAG.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.directconnect.Connection("example", {
 *     name: "example",
 *     bandwidth: "1Gbps",
 *     location: "EqSe2-EQ",
 * });
 * const exampleLinkAggregationGroup = new aws.directconnect.LinkAggregationGroup("example", {
 *     name: "example",
 *     connectionsBandwidth: "1Gbps",
 *     location: "EqSe2-EQ",
 * });
 * const exampleConnectionAssociation = new aws.directconnect.ConnectionAssociation("example", {
 *     connectionId: example.id,
 *     lagId: exampleLinkAggregationGroup.id,
 * });
 * ```
 */
class ConnectionAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ConnectionAssociation(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ConnectionAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectionAssociation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["connectionId"] = state?.connectionId;
            resourceInputs["lagId"] = state?.lagId;
            resourceInputs["region"] = state?.region;
        }
        else {
            const args = argsOrState;
            if (args?.connectionId === undefined && !opts.urn) {
                throw new Error("Missing required property 'connectionId'");
            }
            if (args?.lagId === undefined && !opts.urn) {
                throw new Error("Missing required property 'lagId'");
            }
            resourceInputs["connectionId"] = args?.connectionId;
            resourceInputs["lagId"] = args?.lagId;
            resourceInputs["region"] = args?.region;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectionAssociation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ConnectionAssociation = ConnectionAssociation;
/** @internal */
ConnectionAssociation.__pulumiType = 'aws:directconnect/connectionAssociation:ConnectionAssociation';
//# sourceMappingURL=connectionAssociation.js.map