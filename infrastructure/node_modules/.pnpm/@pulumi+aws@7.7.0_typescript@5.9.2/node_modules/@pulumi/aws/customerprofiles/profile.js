"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Profile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an Amazon Customer Profiles Profile.
 * See the [Create Profile](https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateProfile.html) for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.customerprofiles.Domain("example", {domainName: "example"});
 * const exampleProfile = new aws.customerprofiles.Profile("example", {domainName: example.domainName});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Amazon Customer Profiles Profile using the resource `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:customerprofiles/profile:Profile example domain-name/5f2f473dfbe841eb8d05cfc2a4c926df
 * ```
 */
class Profile extends pulumi.CustomResource {
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Profile(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Profile.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountNumber"] = state?.accountNumber;
            resourceInputs["additionalInformation"] = state?.additionalInformation;
            resourceInputs["address"] = state?.address;
            resourceInputs["attributes"] = state?.attributes;
            resourceInputs["billingAddress"] = state?.billingAddress;
            resourceInputs["birthDate"] = state?.birthDate;
            resourceInputs["businessEmailAddress"] = state?.businessEmailAddress;
            resourceInputs["businessName"] = state?.businessName;
            resourceInputs["businessPhoneNumber"] = state?.businessPhoneNumber;
            resourceInputs["domainName"] = state?.domainName;
            resourceInputs["emailAddress"] = state?.emailAddress;
            resourceInputs["firstName"] = state?.firstName;
            resourceInputs["genderString"] = state?.genderString;
            resourceInputs["homePhoneNumber"] = state?.homePhoneNumber;
            resourceInputs["lastName"] = state?.lastName;
            resourceInputs["mailingAddress"] = state?.mailingAddress;
            resourceInputs["middleName"] = state?.middleName;
            resourceInputs["mobilePhoneNumber"] = state?.mobilePhoneNumber;
            resourceInputs["partyTypeString"] = state?.partyTypeString;
            resourceInputs["personalEmailAddress"] = state?.personalEmailAddress;
            resourceInputs["phoneNumber"] = state?.phoneNumber;
            resourceInputs["region"] = state?.region;
            resourceInputs["shippingAddress"] = state?.shippingAddress;
        }
        else {
            const args = argsOrState;
            if (args?.domainName === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            resourceInputs["accountNumber"] = args?.accountNumber;
            resourceInputs["additionalInformation"] = args?.additionalInformation;
            resourceInputs["address"] = args?.address;
            resourceInputs["attributes"] = args?.attributes;
            resourceInputs["billingAddress"] = args?.billingAddress;
            resourceInputs["birthDate"] = args?.birthDate;
            resourceInputs["businessEmailAddress"] = args?.businessEmailAddress;
            resourceInputs["businessName"] = args?.businessName;
            resourceInputs["businessPhoneNumber"] = args?.businessPhoneNumber;
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["emailAddress"] = args?.emailAddress;
            resourceInputs["firstName"] = args?.firstName;
            resourceInputs["genderString"] = args?.genderString;
            resourceInputs["homePhoneNumber"] = args?.homePhoneNumber;
            resourceInputs["lastName"] = args?.lastName;
            resourceInputs["mailingAddress"] = args?.mailingAddress;
            resourceInputs["middleName"] = args?.middleName;
            resourceInputs["mobilePhoneNumber"] = args?.mobilePhoneNumber;
            resourceInputs["partyTypeString"] = args?.partyTypeString;
            resourceInputs["personalEmailAddress"] = args?.personalEmailAddress;
            resourceInputs["phoneNumber"] = args?.phoneNumber;
            resourceInputs["region"] = args?.region;
            resourceInputs["shippingAddress"] = args?.shippingAddress;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Profile.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Profile = Profile;
/** @internal */
Profile.__pulumiType = 'aws:customerprofiles/profile:Profile';
//# sourceMappingURL=profile.js.map