"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomActionType = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a CodeDeploy CustomActionType
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.codepipeline.CustomActionType("example", {
 *     category: "Build",
 *     inputArtifactDetails: {
 *         maximumCount: 1,
 *         minimumCount: 0,
 *     },
 *     outputArtifactDetails: {
 *         maximumCount: 1,
 *         minimumCount: 0,
 *     },
 *     providerName: "example",
 *     version: "1",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import CodeDeploy CustomActionType using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:codepipeline/customActionType:CustomActionType example Build:pulumi:1
 * ```
 */
class CustomActionType extends pulumi.CustomResource {
    /**
     * Get an existing CustomActionType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CustomActionType(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of CustomActionType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomActionType.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["category"] = state?.category;
            resourceInputs["configurationProperties"] = state?.configurationProperties;
            resourceInputs["inputArtifactDetails"] = state?.inputArtifactDetails;
            resourceInputs["outputArtifactDetails"] = state?.outputArtifactDetails;
            resourceInputs["owner"] = state?.owner;
            resourceInputs["providerName"] = state?.providerName;
            resourceInputs["region"] = state?.region;
            resourceInputs["settings"] = state?.settings;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["version"] = state?.version;
        }
        else {
            const args = argsOrState;
            if (args?.category === undefined && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if (args?.inputArtifactDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'inputArtifactDetails'");
            }
            if (args?.outputArtifactDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'outputArtifactDetails'");
            }
            if (args?.providerName === undefined && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["category"] = args?.category;
            resourceInputs["configurationProperties"] = args?.configurationProperties;
            resourceInputs["inputArtifactDetails"] = args?.inputArtifactDetails;
            resourceInputs["outputArtifactDetails"] = args?.outputArtifactDetails;
            resourceInputs["providerName"] = args?.providerName;
            resourceInputs["region"] = args?.region;
            resourceInputs["settings"] = args?.settings;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["version"] = args?.version;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomActionType.__pulumiType, name, resourceInputs, opts);
    }
}
exports.CustomActionType = CustomActionType;
/** @internal */
CustomActionType.__pulumiType = 'aws:codepipeline/customActionType:CustomActionType';
//# sourceMappingURL=customActionType.js.map