"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Glue Security Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.SecurityConfiguration("example", {
 *     name: "example",
 *     encryptionConfiguration: {
 *         cloudwatchEncryption: {
 *             cloudwatchEncryptionMode: "DISABLED",
 *         },
 *         jobBookmarksEncryption: {
 *             jobBookmarksEncryptionMode: "DISABLED",
 *         },
 *         s3Encryption: {
 *             kmsKeyArn: exampleAwsKmsKey.arn,
 *             s3EncryptionMode: "SSE-KMS",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Glue Security Configurations using `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:glue/securityConfiguration:SecurityConfiguration example example
 * ```
 */
class SecurityConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing SecurityConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SecurityConfiguration(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of SecurityConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityConfiguration.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["encryptionConfiguration"] = state?.encryptionConfiguration;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
        }
        else {
            const args = argsOrState;
            if (args?.encryptionConfiguration === undefined && !opts.urn) {
                throw new Error("Missing required property 'encryptionConfiguration'");
            }
            resourceInputs["encryptionConfiguration"] = args?.encryptionConfiguration;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}
exports.SecurityConfiguration = SecurityConfiguration;
/** @internal */
SecurityConfiguration.__pulumiType = 'aws:glue/securityConfiguration:SecurityConfiguration';
//# sourceMappingURL=securityConfiguration.js.map