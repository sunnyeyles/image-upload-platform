"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VideoStream = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Kinesis Video Stream resource. Amazon Kinesis Video Streams makes it easy to securely stream video from connected devices to AWS for analytics, machine learning (ML), playback, and other processing.
 *
 * For more details, see the [Amazon Kinesis Documentation](https://aws.amazon.com/documentation/kinesis/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const _default = new aws.kinesis.VideoStream("default", {
 *     name: "kinesis-video-stream",
 *     dataRetentionInHours: 1,
 *     deviceName: "kinesis-video-device-name",
 *     mediaType: "video/h264",
 *     tags: {
 *         Name: "kinesis-video-stream",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Kinesis Streams using the `arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:kinesis/videoStream:VideoStream test_stream arn:aws:kinesisvideo:us-west-2:123456789012:stream/pulumi-kinesis-test/1554978910975
 * ```
 */
class VideoStream extends pulumi.CustomResource {
    /**
     * Get an existing VideoStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VideoStream(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of VideoStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VideoStream.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["creationTime"] = state?.creationTime;
            resourceInputs["dataRetentionInHours"] = state?.dataRetentionInHours;
            resourceInputs["deviceName"] = state?.deviceName;
            resourceInputs["kmsKeyId"] = state?.kmsKeyId;
            resourceInputs["mediaType"] = state?.mediaType;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["version"] = state?.version;
        }
        else {
            const args = argsOrState;
            resourceInputs["dataRetentionInHours"] = args?.dataRetentionInHours;
            resourceInputs["deviceName"] = args?.deviceName;
            resourceInputs["kmsKeyId"] = args?.kmsKeyId;
            resourceInputs["mediaType"] = args?.mediaType;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VideoStream.__pulumiType, name, resourceInputs, opts);
    }
}
exports.VideoStream = VideoStream;
/** @internal */
VideoStream.__pulumiType = 'aws:kinesis/videoStream:VideoStream';
//# sourceMappingURL=videoStream.js.map