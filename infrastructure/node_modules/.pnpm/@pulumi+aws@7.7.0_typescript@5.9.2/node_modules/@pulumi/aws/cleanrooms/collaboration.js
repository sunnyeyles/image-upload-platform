"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Collaboration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a AWS Clean Rooms collaboration.
 * All members included in the definition will be invited to join the collaboration and can create memberships.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testCollaboration = new aws.cleanrooms.Collaboration("test_collaboration", {
 *     name: "pulumi-example-collaboration",
 *     creatorMemberAbilities: [
 *         "CAN_QUERY",
 *         "CAN_RECEIVE_RESULTS",
 *     ],
 *     creatorDisplayName: "Creator ",
 *     description: "I made this collaboration with Pulumi!",
 *     queryLogStatus: "DISABLED",
 *     analyticsEngine: "SPARK",
 *     dataEncryptionMetadata: {
 *         allowClearText: true,
 *         allowDuplicates: true,
 *         allowJoinsOnColumnsWithDifferentNames: true,
 *         preserveNulls: false,
 *     },
 *     members: [{
 *         accountId: "123456789012",
 *         displayName: "Other member",
 *         memberAbilities: [],
 *     }],
 *     tags: {
 *         Project: "Pulumi",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_cleanrooms_collaboration` using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:cleanrooms/collaboration:Collaboration collaboration 1234abcd-12ab-34cd-56ef-1234567890ab
 * ```
 */
class Collaboration extends pulumi.CustomResource {
    /**
     * Get an existing Collaboration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Collaboration(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of Collaboration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Collaboration.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["analyticsEngine"] = state?.analyticsEngine;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["creatorDisplayName"] = state?.creatorDisplayName;
            resourceInputs["creatorMemberAbilities"] = state?.creatorMemberAbilities;
            resourceInputs["dataEncryptionMetadata"] = state?.dataEncryptionMetadata;
            resourceInputs["description"] = state?.description;
            resourceInputs["members"] = state?.members;
            resourceInputs["name"] = state?.name;
            resourceInputs["queryLogStatus"] = state?.queryLogStatus;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["updateTime"] = state?.updateTime;
        }
        else {
            const args = argsOrState;
            if (args?.creatorDisplayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'creatorDisplayName'");
            }
            if (args?.creatorMemberAbilities === undefined && !opts.urn) {
                throw new Error("Missing required property 'creatorMemberAbilities'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.queryLogStatus === undefined && !opts.urn) {
                throw new Error("Missing required property 'queryLogStatus'");
            }
            resourceInputs["analyticsEngine"] = args?.analyticsEngine;
            resourceInputs["creatorDisplayName"] = args?.creatorDisplayName;
            resourceInputs["creatorMemberAbilities"] = args?.creatorMemberAbilities;
            resourceInputs["dataEncryptionMetadata"] = args?.dataEncryptionMetadata;
            resourceInputs["description"] = args?.description;
            resourceInputs["members"] = args?.members;
            resourceInputs["name"] = args?.name;
            resourceInputs["queryLogStatus"] = args?.queryLogStatus;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Collaboration.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Collaboration = Collaboration;
/** @internal */
Collaboration.__pulumiType = 'aws:cleanrooms/collaboration:Collaboration';
//# sourceMappingURL=collaboration.js.map