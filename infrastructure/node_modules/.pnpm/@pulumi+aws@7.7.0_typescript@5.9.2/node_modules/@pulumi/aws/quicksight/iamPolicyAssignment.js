"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.IamPolicyAssignment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS QuickSight IAM Policy Assignment.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.quicksight.IamPolicyAssignment("example", {
 *     assignmentName: "example",
 *     assignmentStatus: "ENABLED",
 *     policyArn: exampleAwsIamPolicy.arn,
 *     identities: {
 *         users: [exampleAwsQuicksightUser.userName],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import QuickSight IAM Policy Assignment using the AWS account ID, namespace, and assignment name separated by commas (`,`). For example:
 *
 * ```sh
 * $ pulumi import aws:quicksight/iamPolicyAssignment:IamPolicyAssignment example 123456789012,default,example
 * ```
 */
class IamPolicyAssignment extends pulumi.CustomResource {
    /**
     * Get an existing IamPolicyAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new IamPolicyAssignment(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of IamPolicyAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamPolicyAssignment.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["assignmentId"] = state?.assignmentId;
            resourceInputs["assignmentName"] = state?.assignmentName;
            resourceInputs["assignmentStatus"] = state?.assignmentStatus;
            resourceInputs["awsAccountId"] = state?.awsAccountId;
            resourceInputs["identities"] = state?.identities;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["policyArn"] = state?.policyArn;
            resourceInputs["region"] = state?.region;
        }
        else {
            const args = argsOrState;
            if (args?.assignmentName === undefined && !opts.urn) {
                throw new Error("Missing required property 'assignmentName'");
            }
            if (args?.assignmentStatus === undefined && !opts.urn) {
                throw new Error("Missing required property 'assignmentStatus'");
            }
            resourceInputs["assignmentName"] = args?.assignmentName;
            resourceInputs["assignmentStatus"] = args?.assignmentStatus;
            resourceInputs["awsAccountId"] = args?.awsAccountId;
            resourceInputs["identities"] = args?.identities;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["policyArn"] = args?.policyArn;
            resourceInputs["region"] = args?.region;
            resourceInputs["assignmentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamPolicyAssignment.__pulumiType, name, resourceInputs, opts);
    }
}
exports.IamPolicyAssignment = IamPolicyAssignment;
/** @internal */
IamPolicyAssignment.__pulumiType = 'aws:quicksight/iamPolicyAssignment:IamPolicyAssignment';
//# sourceMappingURL=iamPolicyAssignment.js.map