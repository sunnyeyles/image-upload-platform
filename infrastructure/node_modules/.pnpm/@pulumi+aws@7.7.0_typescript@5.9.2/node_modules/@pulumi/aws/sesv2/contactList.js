"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactList = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS SESv2 (Simple Email V2) Contact List.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sesv2.ContactList("example", {contactListName: "example"});
 * ```
 *
 * ### Extended Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sesv2.ContactList("example", {
 *     contactListName: "example",
 *     description: "description",
 *     topics: [{
 *         defaultSubscriptionStatus: "OPT_IN",
 *         description: "topic description",
 *         displayName: "Example Topic",
 *         topicName: "example-topic",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SESv2 (Simple Email V2) Contact List using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:sesv2/contactList:ContactList example example
 * ```
 */
class ContactList extends pulumi.CustomResource {
    /**
     * Get an existing ContactList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ContactList(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ContactList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContactList.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["contactListName"] = state?.contactListName;
            resourceInputs["createdTimestamp"] = state?.createdTimestamp;
            resourceInputs["description"] = state?.description;
            resourceInputs["lastUpdatedTimestamp"] = state?.lastUpdatedTimestamp;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["topics"] = state?.topics;
        }
        else {
            const args = argsOrState;
            if (args?.contactListName === undefined && !opts.urn) {
                throw new Error("Missing required property 'contactListName'");
            }
            resourceInputs["contactListName"] = args?.contactListName;
            resourceInputs["description"] = args?.description;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["topics"] = args?.topics;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTimestamp"] = undefined /*out*/;
            resourceInputs["lastUpdatedTimestamp"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContactList.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ContactList = ContactList;
/** @internal */
ContactList.__pulumiType = 'aws:sesv2/contactList:ContactList';
//# sourceMappingURL=contactList.js.map