"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS SESv2 (Simple Email V2) Configuration Set.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sesv2.ConfigurationSet("example", {
 *     configurationSetName: "example",
 *     deliveryOptions: {
 *         maxDeliverySeconds: 300,
 *         tlsPolicy: "REQUIRE",
 *     },
 *     reputationOptions: {
 *         reputationMetricsEnabled: false,
 *     },
 *     sendingOptions: {
 *         sendingEnabled: true,
 *     },
 *     suppressionOptions: {
 *         suppressedReasons: [
 *             "BOUNCE",
 *             "COMPLAINT",
 *         ],
 *     },
 *     trackingOptions: {
 *         customRedirectDomain: "example.com",
 *         httpsPolicy: "REQUIRE",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SESv2 (Simple Email V2) Configuration Set using the `configuration_set_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:sesv2/configurationSet:ConfigurationSet example example
 * ```
 */
class ConfigurationSet extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ConfigurationSet(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ConfigurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationSet.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["configurationSetName"] = state?.configurationSetName;
            resourceInputs["deliveryOptions"] = state?.deliveryOptions;
            resourceInputs["region"] = state?.region;
            resourceInputs["reputationOptions"] = state?.reputationOptions;
            resourceInputs["sendingOptions"] = state?.sendingOptions;
            resourceInputs["suppressionOptions"] = state?.suppressionOptions;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["trackingOptions"] = state?.trackingOptions;
            resourceInputs["vdmOptions"] = state?.vdmOptions;
        }
        else {
            const args = argsOrState;
            if (args?.configurationSetName === undefined && !opts.urn) {
                throw new Error("Missing required property 'configurationSetName'");
            }
            resourceInputs["configurationSetName"] = args?.configurationSetName;
            resourceInputs["deliveryOptions"] = args?.deliveryOptions;
            resourceInputs["region"] = args?.region;
            resourceInputs["reputationOptions"] = args?.reputationOptions;
            resourceInputs["sendingOptions"] = args?.sendingOptions;
            resourceInputs["suppressionOptions"] = args?.suppressionOptions;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["trackingOptions"] = args?.trackingOptions;
            resourceInputs["vdmOptions"] = args?.vdmOptions;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigurationSet.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ConfigurationSet = ConfigurationSet;
/** @internal */
ConfigurationSet.__pulumiType = 'aws:sesv2/configurationSet:ConfigurationSet';
//# sourceMappingURL=configurationSet.js.map