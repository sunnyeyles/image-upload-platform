"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackendEnvironment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Amplify Backend Environment resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.amplify.App("example", {name: "example"});
 * const exampleBackendEnvironment = new aws.amplify.BackendEnvironment("example", {
 *     appId: example.id,
 *     environmentName: "example",
 *     deploymentArtifacts: "app-example-deployment",
 *     stackName: "amplify-app-example",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Amplify backend environment using `app_id` and `environment_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:amplify/backendEnvironment:BackendEnvironment example d2ypk4k47z8u6/example
 * ```
 */
class BackendEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing BackendEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BackendEnvironment(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of BackendEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackendEnvironment.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["appId"] = state?.appId;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["deploymentArtifacts"] = state?.deploymentArtifacts;
            resourceInputs["environmentName"] = state?.environmentName;
            resourceInputs["region"] = state?.region;
            resourceInputs["stackName"] = state?.stackName;
        }
        else {
            const args = argsOrState;
            if (args?.appId === undefined && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if (args?.environmentName === undefined && !opts.urn) {
                throw new Error("Missing required property 'environmentName'");
            }
            resourceInputs["appId"] = args?.appId;
            resourceInputs["deploymentArtifacts"] = args?.deploymentArtifacts;
            resourceInputs["environmentName"] = args?.environmentName;
            resourceInputs["region"] = args?.region;
            resourceInputs["stackName"] = args?.stackName;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackendEnvironment.__pulumiType, name, resourceInputs, opts);
    }
}
exports.BackendEnvironment = BackendEnvironment;
/** @internal */
BackendEnvironment.__pulumiType = 'aws:amplify/backendEnvironment:BackendEnvironment';
//# sourceMappingURL=backendEnvironment.js.map