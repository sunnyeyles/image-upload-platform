"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Proxy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * Using `pulumi import`, import DB proxies using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:rds/proxy:Proxy example example
 * ```
 */
class Proxy extends pulumi.CustomResource {
    /**
     * Get an existing Proxy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Proxy(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of Proxy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Proxy.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["auths"] = state?.auths;
            resourceInputs["debugLogging"] = state?.debugLogging;
            resourceInputs["endpoint"] = state?.endpoint;
            resourceInputs["engineFamily"] = state?.engineFamily;
            resourceInputs["idleClientTimeout"] = state?.idleClientTimeout;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["requireTls"] = state?.requireTls;
            resourceInputs["roleArn"] = state?.roleArn;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["vpcSecurityGroupIds"] = state?.vpcSecurityGroupIds;
            resourceInputs["vpcSubnetIds"] = state?.vpcSubnetIds;
        }
        else {
            const args = argsOrState;
            if (args?.auths === undefined && !opts.urn) {
                throw new Error("Missing required property 'auths'");
            }
            if (args?.engineFamily === undefined && !opts.urn) {
                throw new Error("Missing required property 'engineFamily'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if (args?.vpcSubnetIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcSubnetIds'");
            }
            resourceInputs["auths"] = args?.auths;
            resourceInputs["debugLogging"] = args?.debugLogging;
            resourceInputs["engineFamily"] = args?.engineFamily;
            resourceInputs["idleClientTimeout"] = args?.idleClientTimeout;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["requireTls"] = args?.requireTls;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcSecurityGroupIds"] = args?.vpcSecurityGroupIds;
            resourceInputs["vpcSubnetIds"] = args?.vpcSubnetIds;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Proxy.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Proxy = Proxy;
/** @internal */
Proxy.__pulumiType = 'aws:rds/proxy:Proxy';
//# sourceMappingURL=proxy.js.map