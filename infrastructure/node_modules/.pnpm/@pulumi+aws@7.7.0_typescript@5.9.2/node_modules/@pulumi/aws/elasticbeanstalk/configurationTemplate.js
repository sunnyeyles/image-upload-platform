"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationTemplate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Elastic Beanstalk Configuration Template, which are associated with
 * a specific application and are used to deploy different versions of the
 * application with the same configuration settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const tftest = new aws.elasticbeanstalk.Application("tftest", {
 *     name: "tf-test-name",
 *     description: "tf-test-desc",
 * });
 * const myTemplate = new aws.elasticbeanstalk.ConfigurationTemplate("my_template", {
 *     name: "tf-test-template-config",
 *     application: tftest.name,
 *     solutionStackName: "64bit Amazon Linux 2015.09 v2.0.8 running Go 1.4",
 * });
 * ```
 *
 * ## Option Settings
 *
 * The `setting` field supports the following format:
 *
 * * `namespace` - unique namespace identifying the option's associated AWS resource
 * * `name` - name of the configuration option
 * * `value` - value for the configuration option
 * * `resource` - (Optional) resource name for [scheduled action](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-autoscalingscheduledaction)
 */
class ConfigurationTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ConfigurationTemplate(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ConfigurationTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationTemplate.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["application"] = state?.application;
            resourceInputs["description"] = state?.description;
            resourceInputs["environmentId"] = state?.environmentId;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["settings"] = state?.settings;
            resourceInputs["solutionStackName"] = state?.solutionStackName;
        }
        else {
            const args = argsOrState;
            if (args?.application === undefined && !opts.urn) {
                throw new Error("Missing required property 'application'");
            }
            resourceInputs["application"] = args?.application;
            resourceInputs["description"] = args?.description;
            resourceInputs["environmentId"] = args?.environmentId;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["settings"] = args?.settings;
            resourceInputs["solutionStackName"] = args?.solutionStackName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigurationTemplate.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ConfigurationTemplate = ConfigurationTemplate;
/** @internal */
ConfigurationTemplate.__pulumiType = 'aws:elasticbeanstalk/configurationTemplate:ConfigurationTemplate';
//# sourceMappingURL=configurationTemplate.js.map