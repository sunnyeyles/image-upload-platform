"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAclAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Creates a WAFv2 Web ACL Association.
 *
 * > **NOTE on associating a WAFv2 Web ACL with a Cloudfront distribution:** Do not use this resource to associate a WAFv2 Web ACL with a Cloudfront Distribution. The [AWS API call backing this resource](https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html) notes that you should use the `webAclId` property on the `cloudfrontDistribution` instead.
 *
 * [1]: https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html
 *
 * ## Import
 *
 * Using `pulumi import`, import WAFv2 Web ACL Association using `WEB_ACL_ARN,RESOURCE_ARN`. For example:
 *
 * ```sh
 * $ pulumi import aws:wafv2/webAclAssociation:WebAclAssociation example arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name
 * ```
 */
class WebAclAssociation extends pulumi.CustomResource {
    /**
     * Get an existing WebAclAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WebAclAssociation(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of WebAclAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebAclAssociation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["region"] = state?.region;
            resourceInputs["resourceArn"] = state?.resourceArn;
            resourceInputs["webAclArn"] = state?.webAclArn;
        }
        else {
            const args = argsOrState;
            if (args?.resourceArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            if (args?.webAclArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'webAclArn'");
            }
            resourceInputs["region"] = args?.region;
            resourceInputs["resourceArn"] = args?.resourceArn;
            resourceInputs["webAclArn"] = args?.webAclArn;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebAclAssociation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WebAclAssociation = WebAclAssociation;
/** @internal */
WebAclAssociation.__pulumiType = 'aws:wafv2/webAclAssociation:WebAclAssociation';
//# sourceMappingURL=webAclAssociation.js.map