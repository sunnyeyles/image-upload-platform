"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAmiIdsOutput = exports.getAmiIds = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The Autoscaling Groups data source allows access to the list of AWS
 * ASGs within a specific region. This will allow you to pass a list of AutoScaling Groups to other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const groups = aws.autoscaling.getAmiIds({
 *     filters: [
 *         {
 *             name: "tag:Team",
 *             values: ["Pets"],
 *         },
 *         {
 *             name: "tag-key",
 *             values: ["Environment"],
 *         },
 *     ],
 * });
 * const slackNotifications = new aws.autoscaling.Notification("slack_notifications", {
 *     groupNames: groups.then(groups => groups.names),
 *     notifications: [
 *         aws.autoscaling.NotificationType.InstanceLaunch,
 *         aws.autoscaling.NotificationType.InstanceTerminate,
 *         aws.autoscaling.NotificationType.InstanceLaunchError,
 *         aws.autoscaling.NotificationType.InstanceTerminateError,
 *     ],
 *     topicArn: "TOPIC ARN",
 * });
 * ```
 */
function getAmiIds(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:autoscaling/getAmiIds:getAmiIds", {
        "filters": args.filters,
        "names": args.names,
        "region": args.region,
    }, opts);
}
exports.getAmiIds = getAmiIds;
/**
 * The Autoscaling Groups data source allows access to the list of AWS
 * ASGs within a specific region. This will allow you to pass a list of AutoScaling Groups to other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const groups = aws.autoscaling.getAmiIds({
 *     filters: [
 *         {
 *             name: "tag:Team",
 *             values: ["Pets"],
 *         },
 *         {
 *             name: "tag-key",
 *             values: ["Environment"],
 *         },
 *     ],
 * });
 * const slackNotifications = new aws.autoscaling.Notification("slack_notifications", {
 *     groupNames: groups.then(groups => groups.names),
 *     notifications: [
 *         aws.autoscaling.NotificationType.InstanceLaunch,
 *         aws.autoscaling.NotificationType.InstanceTerminate,
 *         aws.autoscaling.NotificationType.InstanceLaunchError,
 *         aws.autoscaling.NotificationType.InstanceTerminateError,
 *     ],
 *     topicArn: "TOPIC ARN",
 * });
 * ```
 */
function getAmiIdsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:autoscaling/getAmiIds:getAmiIds", {
        "filters": args.filters,
        "names": args.names,
        "region": args.region,
    }, opts);
}
exports.getAmiIdsOutput = getAmiIdsOutput;
//# sourceMappingURL=getAmiIds.js.map